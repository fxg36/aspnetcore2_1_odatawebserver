// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODataWebserver.Webserver;

namespace ODataWebserver.EfContext.Migrations
{
    [DbContext(typeof(DummyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartServiceODataProvider.Models.ApiConsumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiKey");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ApiConsumers");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.ApiConsumerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ApiConsumerId")
                        .IsRequired();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.Property<string>("Operation");

                    b.HasKey("Id");

                    b.HasIndex("ApiConsumerId");

                    b.ToTable("ApiConsumerLogs");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.HyperParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("HyperParameters");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.HyperParameterForJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<int?>("HyperParameterId");

                    b.Property<int?>("JobId");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.HasKey("Id");

                    b.HasIndex("HyperParameterId");

                    b.HasIndex("JobId");

                    b.ToTable("HyperParameterForJob");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<bool?>("IsFinished");

                    b.Property<bool?>("IsProcessing");

                    b.Property<bool?>("IsResultFetched");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.Property<string>("Name");

                    b.Property<string>("StatusComment");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.JobResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Blob");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<string>("DataEncoding");

                    b.Property<string>("DataOriginFormat");

                    b.Property<int?>("JobId")
                        .IsRequired();

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobResults");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.ValueOverride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AttributeName");

                    b.Property<string>("Context");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedUtc");

                    b.Property<string>("EntityId");

                    b.Property<int?>("JobId");

                    b.Property<string>("LastChangeBy");

                    b.Property<DateTime?>("LastChangeUtc");

                    b.Property<string>("TableName");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("ValuesToOverwrite");
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.ApiConsumerLog", b =>
                {
                    b.HasOne("SmartServiceODataProvider.Models.ApiConsumer", "ApiConsumer")
                        .WithMany("Logs")
                        .HasForeignKey("ApiConsumerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.HyperParameterForJob", b =>
                {
                    b.HasOne("SmartServiceODataProvider.Models.HyperParameter", "HyperParameter")
                        .WithMany()
                        .HasForeignKey("HyperParameterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartServiceODataProvider.Models.Job", "Job")
                        .WithMany("HyperParameters")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.JobResult", b =>
                {
                    b.HasOne("SmartServiceODataProvider.Models.Job", "Job")
                        .WithMany("JobResults")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartServiceODataProvider.Models.ValueOverride", b =>
                {
                    b.HasOne("SmartServiceODataProvider.Models.Job", "Job")
                        .WithMany("ValueOverrides")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
